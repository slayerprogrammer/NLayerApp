// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayer.Repository;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NLayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NLayer.Core.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2022, 4, 18, 19, 44, 44, 30, DateTimeKind.Utc).AddTicks(2871),
                            IsActive = false,
                            IsDelete = false,
                            Name = "Kalemler"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2022, 4, 18, 19, 44, 44, 30, DateTimeKind.Utc).AddTicks(2876),
                            IsActive = false,
                            IsDelete = false,
                            Name = "Defterler"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2022, 4, 18, 19, 44, 44, 30, DateTimeKind.Utc).AddTicks(2877),
                            IsActive = false,
                            IsDelete = false,
                            Name = "Silgiler"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            CreatedDate = new DateTime(2022, 4, 18, 19, 44, 44, 30, DateTimeKind.Utc).AddTicks(3230),
                            IsActive = true,
                            IsDelete = false,
                            Name = "Dolma Kalem",
                            Price = 10m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 1L,
                            CreatedDate = new DateTime(2022, 4, 18, 19, 44, 44, 30, DateTimeKind.Utc).AddTicks(3234),
                            IsActive = true,
                            IsDelete = false,
                            Name = "Kurşun Kalem",
                            Price = 50m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 1L,
                            CreatedDate = new DateTime(2022, 4, 18, 19, 44, 44, 30, DateTimeKind.Utc).AddTicks(3236),
                            IsActive = true,
                            IsDelete = false,
                            Name = "Tükenmez Kalem",
                            Price = 100m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 2L,
                            CreatedDate = new DateTime(2022, 4, 18, 19, 44, 44, 30, DateTimeKind.Utc).AddTicks(3238),
                            IsActive = true,
                            IsDelete = false,
                            Name = "80 Yaprak Çizgili Defter",
                            Price = 50m,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("NLayer.Core.ProductFeature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Color = "Kırmızı",
                            Height = 100,
                            ProductId = 1L,
                            Width = 200
                        },
                        new
                        {
                            Id = 2L,
                            Color = "Mavi",
                            Height = 200,
                            ProductId = 2L,
                            Width = 300
                        });
                });

            modelBuilder.Entity("NLayer.Core.Product", b =>
                {
                    b.HasOne("NLayer.Core.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NLayer.Core.ProductFeature", b =>
                {
                    b.HasOne("NLayer.Core.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("NLayer.Core.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NLayer.Core.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NLayer.Core.Product", b =>
                {
                    b.Navigation("ProductFeature")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
